DECLARE
    mv_existente int:=0;
BEGIN
  SELECT count(*) into mv_existente FROM all_mviews where upper(mview_name) = upper('MV_VAGAS_VINCULADAS_ESTUDANTE'); 
  if mv_existente<=0 then
     EXECUTE IMMEDIATE 'CREATE MATERIALIZED VIEW SERVICE_VAGAS_DEV.MV_VAGAS_VINCULADAS_ESTUDANTE
PARALLEL 8 
BUILD IMMEDIATE 
REFRESH FORCE
AS
SELECT VINC_E.ID_ESTUDANTE            as ID_ESTUDANTE,
               VINC_E.CODIGO_VAGA             AS CODIGO_VAGA,
               VAGA_E.ID_LOCAL_CONTRATO       AS ID_LOCAL_CONTRATO,
               LOC_C.CNPJ                     AS CNPJ,
               ''ESTAGIO''                      AS TIPO_VAGA,
               VAGA_E.TIPO_DIVULGACAO         AS TIPO_DIVULGACAO,
               AP.DESCRICAO_AREA_PROFISSIONAL AS AREA_PROFISSIONAL,
               NULL                           AS AREA_ATUACAO,
               NULL                           AS CURSO_CAPACITACAO,
               VAGA_E.VALOR_BOLSA_FIXO        AS VALOR_BOLSA,
               VAGA_E.VALOR_BOLSA_DE          AS VALOR_BOLSA_DE,
               VAGA_E.VALOR_BOLSA_ATE         AS VALOR_BOLSA_ATE,
               VAGA_E.TIPO_VALOR_BOLSA        AS TIPO_VALOR_BOLSA,
               END.LATITUDE                   AS LATITUDE_EMPRESA,
               END.LONGITUDE                  AS LONGITUDE_EMPRESA,
               COUNT(B.ID)                    AS BENEFICIOS,
               PCD.ID                         AS ID_PCD,
               loc_c.razao_social             as NOME_EMPRESA_PJ,
               loc_c.nome                     as NOME_EMPRESA_PL,
               SIT.SIGLA,
               VINC_E.SITUACAO_VINCULO,
               COUNT(OE.ID)                   AS OCORRENCIAS
        FROM SERVICE_VAGAS_DEV.VINCULOS_VAGA VINC_E
                 INNER JOIN SERVICE_VAGAS_DEV.VAGAS_ESTAGIO VAGA_E ON VAGA_E.CODIGO_DA_VAGA = VINC_E.CODIGO_VAGA
                 INNER JOIN SERVICE_VAGAS_DEV.SITUACOES SIT ON SIT.ID = VAGA_E.ID_SITUACAO_VAGA
                 INNER JOIN SERVICE_VAGAS_DEV.REP_AREAS_PROFISSIONAIS AP ON AP.CODIGO_AREA_PROFISSIONAL = VAGA_E.CODIGO_AREA_PROFISSIONAL
                 INNER JOIN SERVICE_VAGAS_DEV.REP_LOCAIS_CONTRATO LOC_C ON LOC_C.ID = VAGA_E.ID_LOCAL_CONTRATO
                 INNER JOIN SERVICE_VAGAS_DEV.REP_LOCAIS_ENDERECOS LOC_E ON LOC_C.ID = LOC_E.ID_LOCAL_CONTRATO AND LOC_E.DELETADO = 0
                 INNER JOIN SERVICE_VAGAS_DEV.REP_ENDERECOS END ON LOC_E.ID_ENDERECO = END.ID
                 LEFT JOIN SERVICE_VAGAS_DEV.BENEFICIOS_ADICIONAIS B ON B.ID_VAGA_ESTAGIO = VAGA_E.ID
                 LEFT JOIN SERVICE_VAGAS_DEV.PCD_ESTAGIO PCD ON pcd.ID_VAGA_ESTAGIO = VAGA_E.ID
                 LEFT JOIN SERVICE_VAGAS_DEV.OCORRENCIAS_ESTAGIO OE ON OE.ID_VAGA_ESTAGIO = VAGA_E.ID AND OE.DELETADO = 0
        WHERE VINC_E.SITUACAO_VINCULO <> 5
        GROUP BY ID_ESTUDANTE, CODIGO_VAGA, VAGA_E.ID_LOCAL_CONTRATO, CNPJ, ''ESTAGIO'', TIPO_DIVULGACAO,
                 DESCRICAO_AREA_PROFISSIONAL,
                 VALOR_BOLSA_FIXO, VALOR_BOLSA_DE, VALOR_BOLSA_ATE, TIPO_VALOR_BOLSA, LATITUDE, LONGITUDE, PCD.ID,
                 loc_c.razao_social, loc_c.nome, SIT.SIGLA, SITUACAO_VINCULO
        UNION all
        SELECT VINC_A.ID_ESTUDANTE             as ID_ESTUDANTE,
               VINC_A.CODIGO_VAGA              AS CODIGO_VAGA,
               VAGA_A.ID_LOCAL_CONTRATO        AS ID_LOCAL_CONTRATO,
               LOC_C.CNPJ                      AS CNPJ,
               ''APRENDIZ''                    AS TIPO_VAGA,
               VAGA_A.TIPO_DIVULGACAO          AS TIPO_DIVULGACAO,
               NULL                            AS AREA_PROFISSIONAL,
               CC.ID_AREA_ATUACAO AS AREA_ATUACAO,
               T.NOME_CURSO                    AS CURSO_CAPACITACAO,
               VAGA_A.VALOR_SALARIO            AS VALOR_BOLSA,
               VAGA_A.VALOR_SALARIO_DE         AS VALOR_BOLSA_DE,
               VAGA_A.VALOR_SALARIO_ATE        AS VALOR_BOLSA_ATE,
               VAGA_A.TIPO_SALARIO_VALOR       AS TIPO_VALOR_BOLSA,
               END.LATITUDE                    AS LATITUDE_EMPRESA,
               END.LONGITUDE                   AS LONGITUDE_EMPRESA,
               COUNT(B.ID)                     AS BENEFICIOS,
               PCD.ID                          AS ID_PCD,
               loc_c.razao_social              as NOME_EMPRESA_PJ,
               loc_c.nome                      as NOME_EMPRESA_PL,
               SIT.SIGLA,
               VINC_A.SITUACAO_VINCULO,
               COUNT(OA.ID)                    AS OCORRENCIAS
        FROM SERVICE_VAGAS_DEV.VINCULOS_VAGA VINC_A
                 INNER JOIN SERVICE_VAGAS_DEV.VAGAS_APRENDIZ VAGA_A ON VAGA_A.CODIGO_DA_VAGA = VINC_A.CODIGO_VAGA
                 INNER JOIN SERVICE_VAGAS_DEV.SITUACOES SIT ON SIT.ID = VAGA_A.ID_SITUACAO_VAGA
                 INNER JOIN SERVICE_VAGAS_DEV.TURMAS T ON T.ID_VAGA_APRENDIZ = VAGA_A.ID
                 INNER JOIN SERVICE_VAGAS_DEV.REP_LOCAIS_CONTRATO LOC_C ON LOC_C.ID = VAGA_A.ID_LOCAL_CONTRATO
                 INNER JOIN SERVICE_VAGAS_DEV.REP_LOCAIS_ENDERECOS LOC_E ON LOC_C.ID = LOC_E.ID_LOCAL_CONTRATO AND LOC_E.DELETADO = 0
                 INNER JOIN SERVICE_VAGAS_DEV.REP_ENDERECOS END ON LOC_E.ID_ENDERECO = END.ID
                 JOIN SERVICE_VAGAS_DEV.CURSOS_CAPACITACAO CC on VAGA_A.ID_CURSO_CAPACITACAO = CC.ID
                 LEFT JOIN SERVICE_VAGAS_DEV.BENEFICIOS_ADIC_APRENDIZ B ON B.ID_VAGA_APRENDIZ = VAGA_A.ID
                 LEFT JOIN SERVICE_VAGAS_DEV.PCD_APRENDIZ PCD ON PCD.ID_VAGA_APRENDIZ = VAGA_A.ID
                 LEFT JOIN SERVICE_VAGAS_DEV.OCORRENCIAS_APRENDIZ OA ON OA.ID_VAGA_APRENDIZ = VAGA_A.ID AND OA.DELETADO = 0
        WHERE VINC_A.SITUACAO_VINCULO <> 5
        GROUP BY ID_ESTUDANTE, CODIGO_VAGA, VAGA_A.ID_LOCAL_CONTRATO, CNPJ, ''APRENDIZ'', TIPO_DIVULGACAO,
                 CC.ID_AREA_ATUACAO, NOME_CURSO,
                 VALOR_SALARIO, VALOR_SALARIO_DE, VALOR_SALARIO_ATE, TIPO_SALARIO_VALOR, END.LATITUDE, END.LONGITUDE,
                 PCD.ID, loc_c.razao_social, loc_c.nome, SIT.SIGLA, SITUACAO_VINCULO';
  end if;
END;