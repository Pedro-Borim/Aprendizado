CREATE OR REPLACE PROCEDURE PROC_CLASSIFICACOES_ESTUDANTES_FALTA_INJUST_EM_ETAPA
(
    P_LISTA_ESTUDANTE IN IDS_TYP,
    P_ID_ITEM IN NUMBER,
    P_FAIXA IN VARCHAR2,
    P_PERIODO IN NUMBER,
    P_PONTOS IN NUMBER,
    P_ERRO OUT NUMBER
) AS

    V_RETORNO NUMBER;
    V_DATA TIMESTAMP;
    V_DATA_INICIAL TIMESTAMP;
    V_INICIO_PROCESSO TIMESTAMP;
    V_PROCEDURE VARCHAR2(255 CHAR) := $$PLSQL_UNIT;
    V_MENSAGEM VARCHAR2(4000 CHAR);
BEGIN
    V_DATA := SYSDATE - 10;
    V_DATA_INICIAL := SYSDATE - P_PERIODO;
    V_INICIO_PROCESSO := CURRENT_TIMESTAMP;


    MERGE INTO CLASSIFICACOES_ESTUDANTES_ANALITICO A
    USING (

        SELECT T.ID_ESTUDANTE FROM (SELECT

            VV.ID_ESTUDANTE AS ID_ESTUDANTE,
            COUNT(VV.ID_ESTUDANTE) AS QTD_FALTA

        FROM RESULTADOS_PROCESSO_SELETIVO R

        INNER JOIN ESTUDANTES_AGENDA EA ON (EA.ID = R.ID_ESTUDANTE_AGENDA)
        INNER JOIN VINCULOS_VAGA VV ON (VV.ID = EA.ID_VINCULO_VAGA)

        WHERE
            R.SITUACAO = 2
            AND (R.AUSENCIA_JUSTIFICADA IS NULL OR R.AUSENCIA_JUSTIFICADA = 0)
            AND VV.ID_ESTUDANTE IN( (SELECT COLUMN_VALUE ID_ESTUDANTE FROM TABLE(P_LISTA_ESTUDANTE)) )
            --IN(262,258,257,266,20003895,11656650,20013737,841585,20007883,20007859,20008067,7642806)
            AND SITUACAO = 2
            AND R.DATA_ALTERACAO BETWEEN V_DATA_INICIAL AND V_DATA

        GROUP BY VV.ID_ESTUDANTE) T
        WHERE FUNC_INTERPRETAR_EXPRESSAO(REPLACE(P_FAIXA, '$', T.QTD_FALTA)) = 1

    ) B
    ON (A.ID_ESTUDANTE = B.ID_ESTUDANTE)
    WHEN MATCHED THEN UPDATE SET A.PONTUACAO_ATUAL = P_PONTOS, A.DATA_ALTERACAO = CURRENT_TIMESTAMP
    WHEN NOT MATCHED THEN INSERT (
            A.ID,
            A.DATA_CRIACAO,
            A.DATA_ALTERACAO,
            A.CRIADO_POR,
            A.MODIFICADO_POR,
            A.DELETADO,
            A.PONTUACAO_ATUAL,
            A.ID_CLASSIFICACAO_PARAMETROS_ITEN,
            A.ID_ESTUDANTE
        )
        VALUES (
            SEQ_CLASSIFICACOES_ESTUDANTES_ANALITICO.NEXTVAL,
            CURRENT_TIMESTAMP,
            CURRENT_TIMESTAMP,
            V_PROCEDURE,
            V_PROCEDURE,
            0,
            P_PONTOS,
            P_ID_ITEM,
            B.ID_ESTUDANTE
        );
EXCEPTION
    WHEN OTHERS THEN
        P_ERRO := 1;
        V_MENSAGEM := SQLERRM;


INSERT INTO CLASSIFICACOES_ESTUDANTES_LOG (ID, DATA_CRIACAO, DATA_ALTERACAO, CRIADO_POR, MODIFICADO_POR, DELETADO,
    IDS_ESTUDANTES, ID_CLASSIFICACOES_PARAMETROS_ITENS, INICIO_PROCESSO, FIM_PROCESSO, MENSAGEM)
VALUES (SEQ_CLASSIFICACOES_ESTUDANTES_LOG.NEXTVAL, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,
        V_PROCEDURE,V_PROCEDURE,0,
        P_LISTA_ESTUDANTE, P_ID_ITEM, V_INICIO_PROCESSO, CURRENT_TIMESTAMP, V_MENSAGEM);

END;
