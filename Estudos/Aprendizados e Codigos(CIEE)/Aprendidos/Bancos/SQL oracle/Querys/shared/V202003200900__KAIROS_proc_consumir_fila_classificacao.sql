CREATE OR REPLACE PROCEDURE PROC_CLASSIFICACOES_ESTUDANTES_CONSUMIR_FILA AS

    VAR_TEMP_EST IDS_TYP := IDS_TYP();
    VAR_TEMP_FILA IDS_TYP := IDS_TYP();
BEGIN
    DBMS_OUTPUT.PUT_LINE('INICIO PROCESSAMENTO FILA ' || CURRENT_TIMESTAMP);
    FOR ITEM_FILA IN (
        SELECT
            REGRA.ID AS ID_REGRA,
            REGRA.PONTO AS PONTO,
            REGRA.FAIXA AS FAIXA,
            REGRA.PERIODO AS PERIODO,
            REGRA.INDICADOR AS INDICADOR,
            CAST(COLLECT(FILA.ID_ESTUDANTE) AS IDS_TYP) AS ID_ESTUDANTES,
            CAST(COLLECT(FILA.ID) AS IDS_TYP) AS ID_ITENS_FILA

        FROM ESTUDANTES_PASSIVEIS_CLASSIFICACOES FILA
        INNER JOIN CLASSIFICACOES_PARAMETROS_ITENS REGRA ON REGRA.ID = FILA.ID_CLASSIFICACOES_PARAMETROS_ITENS

        WHERE
            (FILA.DELETADO IS NULL OR FILA.DELETADO = 0)
        AND (REGRA.DELETADO IS NULL OR REGRA.DELETADO = 0)

        GROUP BY REGRA.ID, REGRA.INDICADOR, REGRA.PONTO, REGRA.FAIXA, REGRA.PERIODO
    ) LOOP

        VAR_TEMP_EST := VAR_TEMP_EST MULTISET UNION DISTINCT ITEM_FILA.ID_ESTUDANTES;
        VAR_TEMP_FILA := VAR_TEMP_FILA MULTISET UNION DISTINCT ITEM_FILA.ID_ITENS_FILA;

        IF(ITEM_FILA.INDICADOR = 'ANALISE_COMPORTAMENTAL') THEN
            DBMS_OUTPUT.PUT_LINE('   ');
        ELSIF(ITEM_FILA.INDICADOR = 'REDACAO') THEN
            DBMS_OUTPUT.PUT_LINE('   ');
        ELSIF(ITEM_FILA.INDICADOR = 'VIDEO_APRESENTACAO') THEN
            DBMS_OUTPUT.PUT_LINE('   ');
        ELSIF(ITEM_FILA.INDICADOR = 'CURSOS_CERTIFICACAO') THEN
            DBMS_OUTPUT.PUT_LINE('   ');
        ELSIF(ITEM_FILA.INDICADOR = 'FAVORITO') THEN
            DBMS_OUTPUT.PUT_LINE('   ');
        ELSIF(ITEM_FILA.INDICADOR = 'TESTES_CIEE') THEN
            DBMS_OUTPUT.PUT_LINE('   ');
        ELSIF(ITEM_FILA.INDICADOR = 'VIDEO_CURRICULO') THEN
            DBMS_OUTPUT.PUT_LINE('   ');
        ELSIF(ITEM_FILA.INDICADOR = 'ESCOLA_CLASSIFICACAO') THEN
            DBMS_OUTPUT.PUT_LINE('   ');
        ELSIF(ITEM_FILA.INDICADOR = 'ESCOLA_CLASSIFICACAO') THEN
            DBMS_OUTPUT.PUT_LINE('   ');
        ELSIF(ITEM_FILA.INDICADOR = 'FALTA_INJUSTIFICADA_ETAPA') THEN
            DBMS_OUTPUT.PUT_LINE('   ');
        ELSIF(ITEM_FILA.INDICADOR = 'FALTA_INJUSTIFICADA_ETAPA') THEN
            DBMS_OUTPUT.PUT_LINE('   ');
        ELSIF(ITEM_FILA.INDICADOR = 'SEM_RETORNO_PENDENTE') THEN
            DBMS_OUTPUT.PUT_LINE('   ');
        ELSIF(ITEM_FILA.INDICADOR = 'MODULO_ESCOLA_NAO_IDENTIFICADA') THEN
            DBMS_OUTPUT.PUT_LINE('   ');
        ELSIF(ITEM_FILA.INDICADOR = 'MODULO_CAMPUS_INATIVO') THEN
            DBMS_OUTPUT.PUT_LINE('   ');
        ELSIF(ITEM_FILA.INDICADOR = 'MODULO_CONTATO_SEM_EMAIL') THEN
            DBMS_OUTPUT.PUT_LINE('   ');
        ELSIF(ITEM_FILA.INDICADOR = 'MODULO_PCD_PENDENTE') THEN
            DBMS_OUTPUT.PUT_LINE('   ');
        END IF;

    END LOOP;

    DELETE FROM ESTUDANTES_PASSIVEIS_CLASSIFICACOES WHERE ID IN( (SELECT COLUMN_VALUE ID_ESTUDANTE FROM TABLE(VAR_TEMP_FILA)) );

    -- EXECUTA CALCULO CONSOLIDADO
    MERGE INTO CLASSIFICACOES_ESTUDANTES_CONSOLIDADO CONSOLIDADO
    USING (
        SELECT ANALITICO.ID_ESTUDANTE, SUM(ANALITICO.PONTUACAO_ATUAL) AS TOTAL
        FROM CLASSIFICACOES_ESTUDANTES_ANALITICO ANALITICO
        WHERE
        (ANALITICO.DELETADO IS NOT NULL OR ANALITICO.DELETADO = 0)
        AND ANALITICO.ID_ESTUDANTE IN( (SELECT COLUMN_VALUE ID_ESTUDANTE FROM TABLE(VAR_TEMP_EST)) )
        GROUP BY ANALITICO.ID_ESTUDANTE
    ) ANALITICO
    ON(CONSOLIDADO.ID_ESTUDANTE = ANALITICO.ID_ESTUDANTE)
    WHEN MATCHED THEN
        UPDATE SET CONSOLIDADO.PONTUACAO_OBTIDA = ANALITICO.TOTAL
    WHEN NOT MATCHED THEN
        INSERT(
        ID, DATA_CRIACAO, DATA_ALTERACAO, CRIADO_POR, MODIFICADO_POR, DELETADO,
        ID_ESTUDANTE, PONTUACAO_OBTIDA, CLASSIFICACAO_OBTIDA, DATA_CALCULO_PONTUACAO)
        VALUES(
            SEQ_CLASSIFICACOES_ESTUDANTES_CONSOLIDADO.NEXTVAL,
            CURRENT_TIMESTAMP,
            CURRENT_TIMESTAMP,
            'PROC_CLASSIFICACOES_ESTUDANTES_CONSUMIR_FILA',
            'PROC_CLASSIFICACOES_ESTUDANTES_CONSUMIR_FILA',
            0,
            ANALITICO.ID_ESTUDANTE,
            ANALITICO.TOTAL,
            1,
            CURRENT_TIMESTAMP
        );

    DBMS_OUTPUT.PUT_LINE('   FIM PROCESSAMENTO FILA ' || CURRENT_TIMESTAMP);
END;


