-- CORREÇÃO DE DATA DE REFERENCIA PARA CALCULO DE RECESSO EM VIEW V_DIAS_DISPONIVEIS_RECESSO
CREATE OR REPLACE VIEW V_DIAS_DISPONIVEIS_RECESSO AS
SELECT ID                       AS CONTRATO,
       --to_char(DATA_INICIO_ESTAGIO,'DD/MM/YYYY')AS DATA_INICIO_ESTAGIO,
       --TRUNC(MONTHS_BETWEEN(sysdate, DATA_INICIO_ESTAGIO))AS qtd_meses_contrato,
       --(round(MONTHS_BETWEEN(sysdate, DATA_INICIO_ESTAGIO)-TRUNC(MONTHS_BETWEEN(sysdate, DATA_INICIO_ESTAGIO)),2)*30) AS qtd_diAS_resto,
       --CASE WHEN (round(MONTHS_BETWEEN(sysdate, DATA_INICIO_ESTAGIO)-TRUNC(MONTHS_BETWEEN(sysdate, DATA_INICIO_ESTAGIO)))*30) >= 15 THEN 1 ELSE 0 END  fracao_14_diAS,
       round(
               (
                       (TRUNC(MONTHS_BETWEEN(DATA_REFERENCIA, DATA_INICIO_ESTAGIO)) * 2.5)
                       +
                       (round(MONTHS_BETWEEN(DATA_REFERENCIA, DATA_INICIO_ESTAGIO) -
                              TRUNC(MONTHS_BETWEEN(DATA_REFERENCIA, DATA_INICIO_ESTAGIO)), 3) * 2.5)
                   ), 1)        AS QTD_DIAS_FERIAS_PROPORCIONAL,
       ((TRUNC(MONTHS_BETWEEN(DATA_REFERENCIA, DATA_INICIO_ESTAGIO)) * 2.5)
           +
        (CASE
             WHEN (round(MONTHS_BETWEEN(DATA_REFERENCIA, DATA_INICIO_ESTAGIO) -
                         TRUNC(MONTHS_BETWEEN(DATA_REFERENCIA, DATA_INICIO_ESTAGIO))) * 30) >= 15
                 THEN 1
             ELSE 0 END) * 2.5) AS QTD_DIAS_FERIAS_CLT,
       round(((TRUNC(MONTHS_BETWEEN(DATA_FINAL_ESTAGIO, DATA_INICIO_ESTAGIO)) * 2.5) +
              (round(MONTHS_BETWEEN(DATA_FINAL_ESTAGIO, DATA_INICIO_ESTAGIO) -
                     TRUNC(MONTHS_BETWEEN(DATA_FINAL_ESTAGIO, DATA_INICIO_ESTAGIO)), 3) * 2.5)), 1
           )                    AS QTD_DIAS_FERIAS_PROPORCIONAL_ATE_FINAL,
       ((TRUNC(MONTHS_BETWEEN(DATA_FINAL_ESTAGIO, DATA_INICIO_ESTAGIO)) * 2.5)
           +
        (CASE
             WHEN (round(MONTHS_BETWEEN(DATA_FINAL_ESTAGIO, DATA_INICIO_ESTAGIO) -
                         TRUNC(MONTHS_BETWEEN(DATA_FINAL_ESTAGIO, DATA_INICIO_ESTAGIO))) * 30) >= 15
                 THEN 1
             ELSE 0 END) * 2.5) AS QTD_DIAS_FERIAS_CLT_ATE_FINAL
FROM (
         SELECT ID,
                TIPO_CONTRATO,
                DATA_INICIO_ESTAGIO,
                DATA_FINAL_ESTAGIO,
                (CASE
                     WHEN MONTHS_BETWEEN(SYSDATE, DATA_INICIO_ESTAGIO) < 0 THEN DATA_INICIO_ESTAGIO
                     ELSE SYSDATE END) AS DATA_REFERENCIA
         FROM CONTRATOS_ESTUDANTES_EMPRESA
     )
WHERE TIPO_CONTRATO = 'E'
ORDER BY ID;



-- CORREÇÃO PCD EM VIEW V_VAGAS_PRIORIZACAO_SISTEMA_POM
CREATE OR REPLACE VIEW V_VAGAS_PRIORIZACAO_SISTEMA_POM AS
    (
        (
            SELECT DISTINCT RC.ID                      ID_CONTRATO,
                            VE.CODIGO_DA_VAGA          CODIGO_DA_VAGA,
                            VE.PROCESSO_PERSONALIZADO  VAGA_PP,
                            'E'                        TIPO_VAGA,
                            VE.DATA_CRIACAO            DATA_ABERTURA,
                            VE.NUMERO_VAGAS            NUMERO_VAGAS,
                            PCD.ID                     ID_PCD,
                            (SELECT COUNT(VV.ID) FROM VINCULOS_VAGA VV WHERE VV.CODIGO_VAGA = VE.CODIGO_DA_VAGA AND VV.DELETADO = 0) TRIADOS,
                            VE.PRIORIZA_POM            PRIORIZA_POM
            FROM VAGAS_ESTAGIO VE
                     JOIN REP_LOCAIS_CONTRATO  LC   ON      (VE.ID_LOCAL_CONTRATO = LC.ID)
                     JOIN REP_CONTRATOS        RC   ON      (LC.ID_CONTRATO = RC.ID)
                     LEFT JOIN PCD_ESTAGIO     PCD  ON      (VE.ID = PCD.ID_VAGA_ESTAGIO)
            WHERE   VE.ID_SITUACAO_VAGA = (SELECT ID FROM SITUACOES WHERE SIGLA = 'A')
              AND     VE.DELETADO = 0
        )

        UNION

        (
            SELECT DISTINCT RC.ID              ID_CONTRATO,
                            VA.CODIGO_DA_VAGA  CODIGO_DA_VAGA,
                            NULL               VAGA_PP,
                            'A'                TIPO_VAGA,
                            VA.DATA_CRIACAO    DATA_ABERTURA,
                            VA.NUMERO_VAGAS    NUMERO_VAGAS,
                            PCD.ID             ID_PCD,
                            (SELECT COUNT(VV.ID)   FROM VINCULOS_VAGA VV   WHERE VV.CODIGO_VAGA = VA.CODIGO_DA_VAGA AND VV.DELETADO = 0) TRIADOS,
                            VA.PRIORIZA_POM    PRIORIZA_POM
            FROM VAGAS_APRENDIZ VA
                     JOIN REP_LOCAIS_CONTRATO  LC  ON (VA.ID_LOCAL_CONTRATO = LC.ID)
                     JOIN REP_CONTRATOS        RC  ON (LC.ID_CONTRATO = RC.ID)
                     LEFT JOIN PCD_APRENDIZ    PCD ON (PCD.ID_VAGA_APRENDIZ = VA.ID)
            WHERE   VA.ID_SITUACAO_VAGA = (SELECT ID FROM SITUACOES WHERE SIGLA = 'A')
              AND     VA.DELETADO = 0)
    );

-- CORREÇÃO PCD EM VIEW V_VAGAS_VINCULADAS_ESTUDANTE
CREATE OR REPLACE VIEW V_VAGAS_VINCULADAS_ESTUDANTE AS
    (

        SELECT VINC_E.ID_ESTUDANTE as ID_ESTUDANTE,
               VINC_E.CODIGO_VAGA AS CODIGO_VAGA,
               VAGA_E.ID_LOCAL_CONTRATO AS ID_LOCAL_CONTRATO,
               LOC_C.CNPJ AS CNPJ,
               'ESTAGIO' AS TIPO_VAGA,
               VAGA_E.TIPO_DIVULGACAO AS TIPO_DIVULGACAO,
               AP.DESCRICAO_AREA_PROFISSIONAL AS AREA_PROFISSIONAL,
               NULL AS AREA_ATUACAO,
               NULL AS CURSO_CAPACITACAO,
               VAGA_E.VALOR_BOLSA_FIXO AS VALOR_BOLSA,
               VAGA_E.VALOR_BOLSA_DE AS VALOR_BOLSA_DE,
               VAGA_E.VALOR_BOLSA_ATE AS VALOR_BOLSA_ATE,
               VAGA_E.TIPO_VALOR_BOLSA AS TIPO_VALOR_BOLSA,
               END.LATITUDE AS LATITUDE_EMPRESA,
               END.LONGITUDE AS LONGITUDE_EMPRESA,
               COUNT(B.ID) AS BENEFICIOS,
               PCD.ID AS ID_PCD,
               loc_c.razao_social as NOME_EMPRESA_PJ,
               loc_c.nome as NOME_EMPRESA_PL
        FROM VINCULOS_VAGA VINC_E
                 INNER JOIN VAGAS_ESTAGIO VAGA_E ON VAGA_E.CODIGO_DA_VAGA = VINC_E.CODIGO_VAGA
                 INNER JOIN REP_AREAS_PROFISSIONAIS AP ON AP.CODIGO_AREA_PROFISSIONAL = VAGA_E.CODIGO_AREA_PROFISSIONAL
                 INNER JOIN REP_LOCAIS_CONTRATO LOC_C ON LOC_C.ID = VAGA_E.ID_LOCAL_CONTRATO
                 INNER JOIN REP_LOCAIS_ENDERECOS LOC_E ON LOC_C.ID = LOC_E.ID_LOCAL_CONTRATO AND LOC_E.DELETADO = 0
                 INNER JOIN REP_ENDERECOS END ON LOC_E.ID_ENDERECO = END.ID
                 LEFT JOIN BENEFICIOS_ADICIONAIS B ON B.ID_VAGA_ESTAGIO = VAGA_E.ID
                 LEFT JOIN PCD_ESTAGIO PCD ON pcd.ID_VAGA_ESTAGIO = VAGA_E.ID
        WHERE VINC_E.SITUACAO_VINCULO <> 5
        GROUP BY ID_ESTUDANTE, CODIGO_VAGA, VAGA_E.ID_LOCAL_CONTRATO, CNPJ, 'ESTAGIO', TIPO_DIVULGACAO, DESCRICAO_AREA_PROFISSIONAL,
                 VALOR_BOLSA_FIXO, VALOR_BOLSA_DE, VALOR_BOLSA_ATE, TIPO_VALOR_BOLSA, LATITUDE, LONGITUDE, PCD.ID, loc_c.razao_social,loc_c.nome

        UNION

        SELECT VINC_A.ID_ESTUDANTE as ID_ESTUDANTE,
               VINC_A.CODIGO_VAGA AS CODIGO_VAGA,
               VAGA_A.ID_LOCAL_CONTRATO AS ID_LOCAL_CONTRATO,
               LOC_C.CNPJ AS CNPJ,
               'APRENDIZ' AS TIPO_VAGA,
               VAGA_A.TIPO_DIVULGACAO AS TIPO_DIVULGACAO,
               NULL AS AREA_PROFISSIONAL,
               VAGA_A.ID_AREA_ATUACAO_APRENDIZ AS AREA_ATUACAO,
               T.NOME_CURSO AS CURSO_CAPACITACAO,
               VAGA_A.VALOR_SALARIO AS VALOR_BOLSA,
               VAGA_A.VALOR_SALARIO_DE AS VALOR_BOLSA_DE,
               VAGA_A.VALOR_SALARIO_ATE AS VALOR_BOLSA_ATE,
               VAGA_A.TIPO_SALARIO_VALOR AS TIPO_VALOR_BOLSA,
               END.LATITUDE AS LATITUDE_EMPRESA,
               END.LONGITUDE AS LONGITUDE_EMPRESA,
               COUNT(B.ID) AS BENEFICIOS,
               PCD.ID AS ID_PCD,
               loc_c.razao_social as NOME_EMPRESA_PJ,
               loc_c.nome as NOME_EMPRESA_PL
        FROM VINCULOS_VAGA VINC_A
                 INNER JOIN VAGAS_APRENDIZ VAGA_A ON VAGA_A.CODIGO_DA_VAGA = VINC_A.CODIGO_VAGA
                 INNER JOIN TURMAS T ON T.ID_VAGA_APRENDIZ = VAGA_A.ID
                 INNER JOIN REP_LOCAIS_CONTRATO LOC_C ON LOC_C.ID = VAGA_A.ID_LOCAL_CONTRATO
                 INNER JOIN REP_LOCAIS_ENDERECOS LOC_E ON LOC_C.ID = LOC_E.ID_LOCAL_CONTRATO AND LOC_E.DELETADO = 0
                 INNER JOIN REP_ENDERECOS END ON LOC_E.ID_ENDERECO = END.ID
                 LEFT JOIN BENEFICIOS_ADIC_APRENDIZ B ON B.ID_VAGA_APRENDIZ = VAGA_A.ID
                 LEFT JOIN PCD_APRENDIZ PCD ON PCD.ID_VAGA_APRENDIZ = VAGA_A.ID
        WHERE VINC_A.SITUACAO_VINCULO <> 5
        GROUP BY ID_ESTUDANTE, CODIGO_VAGA, VAGA_A.ID_LOCAL_CONTRATO, CNPJ, 'APRENDIZ', TIPO_DIVULGACAO, ID_AREA_ATUACAO_APRENDIZ, NOME_CURSO,
                 VALOR_SALARIO, VALOR_SALARIO_DE, VALOR_SALARIO_ATE, TIPO_SALARIO_VALOR, END.LATITUDE, END.LONGITUDE, PCD.ID, loc_c.razao_social,loc_c.nome

    ) ;