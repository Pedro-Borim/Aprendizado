package br.com.adtsys.ciee.company.contractplaces.mapper;


import br.com.adtsys.ciee.company.contractplaces.dto.LocalContratoDTO;
import br.com.adtsys.ciee.company.contractplaces.model.LocalContratoView;
import br.com.adtsys.ciee.company.utils.Mapper;
import br.org.ciee.kairos.architecture.core.utils.StringFormartterUtils;
import org.apache.commons.text.WordUtils;

import java.text.ParseException;
import java.util.Optional;


public class LocalContratoViewMapper implements Mapper<LocalContratoView, LocalContratoDTO> {


    @Override
    public LocalContratoDTO convertTransferObject(LocalContratoView localContratoView) {
        String enderecoFormatado = converteEndereco(localContratoView);
        try {
            return LocalContratoDTO.builder()
                .id(localContratoView.getId())
                .name(localContratoView.getNome())
                .cep(StringFormartterUtils.convertToCepFormat(localContratoView.getCep()))
                .managementDescription(localContratoView.getDescricaoGerencia())
                .cieeUnitDescription(localContratoView.getDescricaoUnidadeCiee())
                .idUnidadeCieeLocal(localContratoView.getIdUnidadeCieeLocal())
                .descricaoUnidadeCieeLocal(Optional.ofNullable(localContratoView.getDescricaoUnidadeCieeLocal()).orElse(localContratoView.getDescricaoUnidadeCiee()))
                .contract(localContratoView.getContrato().getId())
                .companyName(localContratoView.getRazaoSocial())
                .cpf(localContratoView.getCpf())
                .cnpj(localContratoView.getCnpj())
                .status(localContratoView.getSituacao())
                .blocked(localContratoView.getBloqueado())
                .companyPersonType(localContratoView.getTipoPessoaEmpresa())
                .serviceType(localContratoView.getContrato().getServiceType())
                .address(enderecoFormatado)
                .siglaGerencia(localContratoView.getSiglaGerencia())
                .descricaoLocal(localContratoView.getDescricaoLocal())
                .carteiraConsultor(localContratoView.getIdCarteira())
                .descricaoCarteira(localContratoView.getDescricaoCarteira())
                .nomeAssistente(localContratoView.getNomeAssistente())
                .build();
        } catch (ParseException e) {
            return LocalContratoDTO.builder().build();
        }
    }

    private String converteEndereco(LocalContratoView localContratoView) {
        if (localContratoView.getIdEndereco() != null) {
            String complemento = Optional.ofNullable(localContratoView.getComplemento()).orElse("");
            return new StringBuilder(WordUtils.capitalizeFully(localContratoView.getTipoLogradouro())).append(" ")
                .append(WordUtils.capitalizeFully(localContratoView.getEndereco())).append(", ")
                .append(WordUtils.capitalizeFully(localContratoView.getNumero())).append(", ")
                .append(complemento).append(" - ")
                .append(WordUtils.capitalizeFully(localContratoView.getBairro())).append(" - ")
                .append(WordUtils.capitalizeFully(localContratoView.getCidade())).append("/")
                .append(WordUtils.capitalizeFully(localContratoView.getUf()))
                .toString();
        }
        return "";
    }

    @Override
    public LocalContratoView convertEntity(LocalContratoDTO localContratoDTO) {
        return null;
    }
}
