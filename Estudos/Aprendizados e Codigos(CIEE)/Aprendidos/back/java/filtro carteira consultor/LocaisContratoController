package br.com.adtsys.ciee.company.contractplaces.controller;

import java.util.List;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import br.com.adtsys.ciee.company.contractplaces.dto.LocaisContratoGeralParams;
import br.com.adtsys.ciee.company.contractplaces.dto.LocaisContratoParams;
import br.com.adtsys.ciee.company.contractplaces.dto.LocaisContratoPorIdsParams;
import br.com.adtsys.ciee.company.contractplaces.dto.LocaisContratoPorIdsResponse;
import br.com.adtsys.ciee.company.contractplaces.dto.UnidadeCieeLocalDTO;
import br.com.adtsys.ciee.company.contractplaces.mapper.LocalContratoGeralViewMapper;
import br.com.adtsys.ciee.company.contractplaces.mapper.LocalContratoViewMapper;
import br.com.adtsys.ciee.company.contractplaces.model.ContractPlaces;
import br.com.adtsys.ciee.company.contractplaces.service.BuscadorLocaisContratoService;
import br.com.adtsys.ciee.company.contractplaces.service.ContractPlacesService;
import br.com.adtsys.ciee.company.contractplacesaddresses.service.LocalEnderecoUnidadeLocalECarteiraLocalService;
import br.com.adtsys.ciee.company.utils.Mapper;
import io.swagger.annotations.Api;
import lombok.RequiredArgsConstructor;


@RestController
@RequiredArgsConstructor
@RequestMapping("/contratos/")
@Api("Lista locais de contratos de um contrato")
public class LocaisContratoController {

    private final BuscadorLocaisContratoService service;
    private final ContractPlacesService contractPlacesService;
    private final LocalEnderecoUnidadeLocalECarteiraLocalService localEnderecoUnidadeLocalECarteiraLocalService;

    @PreAuthorize("hasAnyAuthority('crud_localcon_r')")
    @GetMapping("/{idContrato}/locais")
    public ResponseEntity buscaLocaisContratos(
            @PathVariable("idContrato") Long idContrato, LocaisContratoParams params, Pageable pageable) {
        params.setContractId(idContrato);
        Page locaisContrato = this.service.pesquisarLocaisContrato(params, pageable);
        Mapper mapper = new LocalContratoViewMapper();
        return ResponseEntity.ok(mapper.convertPaginated(locaisContrato));
    }

    @PreAuthorize("hasAnyAuthority('crud_localcon_r')")
    @GetMapping("/locais")
    public ResponseEntity buscarLocaisContratoGeral(LocaisContratoGeralParams params, Pageable pageable){
        Page locaisContrato = this.service.pesquisarLocaisContratoGeral(params, pageable);
        Mapper mapper = new LocalContratoGeralViewMapper();
        return ResponseEntity.ok(mapper.convertPaginated(locaisContrato));
    }

    @PreAuthorize("hasAnyAuthority('crud_localcon_r','crud_localcon_u')")
    @GetMapping("/locais/{idLocalContrato}/cep/{cep}/unidade-ciee-local")
    public ResponseEntity<UnidadeCieeLocalDTO> buscarUnidadeLocalECarteiraLocal(@PathVariable("idLocalContrato") Long idLocalContrato,
                                                                                @PathVariable("cep") String cep) {

    ContractPlaces localContrato = contractPlacesService.find(idLocalContrato);
    return ResponseEntity.ok(localEnderecoUnidadeLocalECarteiraLocalService.buscarUnidadeLocalECarteiraLocal(localContrato, cep));
    }
    
	@PreAuthorize("hasAnyAuthority('crud_localcon_r')")
	@PostMapping("/{idContrato}/locais-por-ids")
	public ResponseEntity<List<LocaisContratoPorIdsResponse>> buscarLocaisContratosPorIds(
			@PathVariable("idContrato") Long idContrato, @RequestBody LocaisContratoPorIdsParams params) {
		params.setContractId(idContrato);
		return ResponseEntity.ok(this.service.buscarLocaisContratosPorIds(params));
	}
}
