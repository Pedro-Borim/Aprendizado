package br.com.adtsys.ciee.company.contractplaces.service;

import static org.apache.commons.collections4.ListUtils.partition;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;

import org.apache.commons.lang3.BooleanUtils;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.domain.Specification;
import org.springframework.stereotype.Service;

import br.com.adtsys.ciee.company.contractplaces.dto.LocaisContratoGeralParams;
import br.com.adtsys.ciee.company.contractplaces.dto.LocaisContratoParams;
import br.com.adtsys.ciee.company.contractplaces.dto.LocaisContratoPorIdsParams;
import br.com.adtsys.ciee.company.contractplaces.dto.LocaisContratoPorIdsResponse;
import br.com.adtsys.ciee.company.contractplaces.model.LocalContratoView;
import br.com.adtsys.ciee.company.contractplaces.repository.ContractPlacesRepository;
import br.com.adtsys.ciee.company.contractplaces.repository.LocaisContratoViewRepository;
import br.com.adtsys.ciee.company.contractplaces.repository.specification.BuscaLocaisContratoGeralSpecification;
import br.com.adtsys.ciee.company.contractplaces.repository.specification.BuscaLocaisContratoSpecification;
import br.org.ciee.kairos.architecture.data.procedures.DesativarCaseSensitive;


@Service
public class BuscadorLocaisContratoService {

    LocaisContratoViewRepository repository;
    private ContractPlacesRepository contractPlacesRepository;

    public BuscadorLocaisContratoService(LocaisContratoViewRepository repository,
    		ContractPlacesRepository contractPlacesRepository) {
        this.repository = repository;
        this.contractPlacesRepository = contractPlacesRepository;
    }

    @DesativarCaseSensitive
    public Page<LocalContratoView> pesquisarLocaisContrato(LocaisContratoParams params, Pageable pageable) {
        Specification specification = new BuscaLocaisContratoSpecification(params);
        return this.repository.findAll(specification, pageable);
    }

    @DesativarCaseSensitive
    public Page<LocalContratoView> pesquisarLocaisContratoGeral(LocaisContratoGeralParams params, Pageable pageable){
        Specification specification = new BuscaLocaisContratoGeralSpecification(params);
        return this.repository.findAll(specification, pageable);
    }

	public List<LocaisContratoPorIdsResponse> buscarLocaisContratosPorIds(LocaisContratoPorIdsParams params) {

		if (BooleanUtils.isTrue(params.getTodos())) {
			return this.contractPlacesRepository.findByContractId(params.getContractId()).stream().map(local -> {
				String nomeRazaoSocial = Objects.isNull(local.getName()) ? local.getCompanyName() : local.getName();
				return LocaisContratoPorIdsResponse.builder().id(local.getId()).razaoSocialNome(nomeRazaoSocial)
						.build();
			}).collect(Collectors.toList());
		}

		List<LocaisContratoPorIdsResponse> listLocais = new ArrayList<LocaisContratoPorIdsResponse>();

		List<List<Long>> partitionsIdsLocaisContrato = partition(params.getIdsLocaisContrato(), 999);
		for (List<Long> partition : partitionsIdsLocaisContrato) {

			List<LocaisContratoPorIdsResponse> listLocaisPartition = this.contractPlacesRepository
					.findByContractIdAndIdIn(params.getContractId(), partition).stream().map(local -> {
						String nomeRazaoSocial = Objects.isNull(local.getName()) ? local.getCompanyName()
								: local.getName();
						return LocaisContratoPorIdsResponse.builder().id(local.getId()).razaoSocialNome(nomeRazaoSocial)
								.build();
					}).collect(Collectors.toList());
			listLocais.addAll(listLocaisPartition);
		}
		return listLocais;
	}

}
