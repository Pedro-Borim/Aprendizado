package br.org.ciee.kairos.vagas.business.conectores;
import java.time.LocalDate;
import java.util.List;
import java.util.Set;

import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.core.JsonProcessingException;

import br.org.ciee.kairos.vagas.business.secretaria.composicao.dto.ComposicaoSecretaria;
import br.org.ciee.kairos.vagas.business.secretaria.polo.dto.PoloDTO;
import br.org.ciee.kairos.vagas.business.secretaria.programa.dto.ProgramaSecretaria;
import br.org.ciee.kairos.vagas.business.secretaria.sala.dto.SalaDTO;
import br.org.ciee.kairos.vagas.common.model.diariodebordo.DiarioDeBordoResponse;
import br.org.ciee.kairos.vagas.common.model.secretaria.BuscaEstudanteRequest;
import br.org.ciee.kairos.vagas.common.model.secretaria.CalendarioSecretaria;
import br.org.ciee.kairos.vagas.common.model.secretaria.CalendarioSecretariaFiltro;
import br.org.ciee.kairos.vagas.common.model.secretaria.CancelarRescindirRequest;
import br.org.ciee.kairos.vagas.common.model.secretaria.ContratoAprendizFiltro;
import br.org.ciee.kairos.vagas.common.model.secretaria.CursoMteRequest;
import br.org.ciee.kairos.vagas.common.model.secretaria.DadosTcaAprendizFiltro;
import br.org.ciee.kairos.vagas.common.model.secretaria.DadosTurmaAprendiz;
import br.org.ciee.kairos.vagas.common.model.secretaria.DatasInicioCursoCapacitacaoRequest;
import br.org.ciee.kairos.vagas.common.model.secretaria.DiarioDeBordoSecretariaFiltro;
import br.org.ciee.kairos.vagas.common.model.secretaria.EmpresaContratoLocalRequest;
import br.org.ciee.kairos.vagas.common.model.secretaria.EstudanteRequest;
import br.org.ciee.kairos.vagas.common.model.secretaria.InstrutorFiltro;
import br.org.ciee.kairos.vagas.common.model.secretaria.InstrutorTurma;
import br.org.ciee.kairos.vagas.common.model.secretaria.ReservaTurmaSecretaria;
import br.org.ciee.kairos.vagas.common.model.secretaria.SecDadosMatriculaResponse;
import br.org.ciee.kairos.vagas.common.model.secretaria.SecReservaAprendiz;
import br.org.ciee.kairos.vagas.common.model.secretaria.TurmaCBOSecretaria;
import br.org.ciee.kairos.vagas.common.model.secretaria.TurmaSecretaria;
import br.org.ciee.kairos.vagas.common.model.secretaria.TurmaSecretariaFiltro;
import br.org.ciee.kairos.vagas.common.model.secretaria.TurmaVagaSecretariaFiltro;
import br.org.ciee.kairos.vagas.common.model.secretariasdk.SecSdkResposta;

public interface ConectorSecretariaSDK {

    SecSdkResposta<Long> enviarInsercaoSala(SalaDTO sala);

    SecSdkResposta<Long> enviarAlteracaoSala(SalaDTO sala);

    SecSdkResposta<Long> enviarInsercaoPrograma(ProgramaSecretaria programaSecretaria);

    SecSdkResposta<Long> enviarAlteracaoPrograma(ProgramaSecretaria programaSecretaria);

    SecSdkResposta<Long> enviarInsercaoPolo(PoloDTO polo);

    SecSdkResposta<Long> enviarAlteracaoPolo(PoloDTO polo);

    void enviarInsercaoComposicao(List<ComposicaoSecretaria> composicoesSecretaria);

    void enviarAlteracaoComposicao(List<ComposicaoSecretaria> composicoesSecretaria);

    Set<LocalDate> obterDatasInicioCursoCapacitacao(DatasInicioCursoCapacitacaoRequest request);

    Set<LocalDate> obterDatasInicioCursoCapacitacaoPorTurmas(DatasInicioCursoCapacitacaoRequest request);

    List<TurmaSecretaria> buscarDadosTurma(TurmaSecretariaFiltro filtro);

    List<TurmaCBOSecretaria> buscarDadosTurmaReserva(TurmaVagaSecretariaFiltro filtro);

    Long reservarTurma(ReservaTurmaSecretaria reserva) throws JsonProcessingException;

    Long enviarDadosEmpresaContratoLocal(EmpresaContratoLocalRequest dados) throws JsonProcessingException;

    Long obterDadosEstudante(BuscaEstudanteRequest filtro);

    Long atualizarDadosEstudante(EstudanteRequest dados) throws JsonProcessingException;

    Long enviarDadosEstudante(EstudanteRequest dados) throws JsonProcessingException;

    SecDadosMatriculaResponse enviarMatriculaAprendiz(SecReservaAprendiz aprendiz) throws JsonProcessingException;

    boolean cancelarMatriculaAprendiz(@NotNull Long idMatriculaRh);

    List<CalendarioSecretaria> obterCalendario(CalendarioSecretariaFiltro filtro);

    ReservaTurmaSecretaria obterReserva(Long idReserva);

    boolean existeReserva(Long reserva);

    boolean removerReserva(Long reserva);

    Long enviarDadosCursoMTE(CursoMteRequest dadosCurso) throws JsonProcessingException;

    Long atualizarDadosCursoMTE(CursoMteRequest dadosCurso) throws JsonProcessingException;
    
    List<DadosTurmaAprendiz> buscarDadosTurmaByEstudanteAndContrato(ContratoAprendizFiltro filtro);

	void cancelarRescindir(CancelarRescindirRequest request);
	
	List<InstrutorTurma> buscarDadosInstrutor(InstrutorFiltro instrutorFiltro);
	
	Double buscarAproveitamentoAprendiz(DadosTcaAprendizFiltro dadosTcaAprendizFiltro) throws JsonProcessingException;

	List<DiarioDeBordoResponse> obterDiarioDeBordoSecretaria(DiarioDeBordoSecretariaFiltro diarioDeBordoFiltro);
}
