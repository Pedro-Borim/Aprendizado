package br.com.adtsys.ciee.company.contract.controller;

import br.com.adtsys.ciee.company.contract.model.ComplementaryData;
import br.com.adtsys.ciee.company.contract.service.ComplementaryDataService;
import br.org.ciee.kairos.architecture.base.controller.impl.BaseControllerImpl;
import br.org.ciee.kairos.architecture.core.exception.BaseException;
import br.org.ciee.kairos.architecture.core.exception.resource.ResourceNotFoundException;
import lombok.NonNull;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/complementary-data")
public class ComplementaryDataController extends BaseControllerImpl<ComplementaryData> {

  @Override
  @PreAuthorize("hasAnyAuthority('crud_contrato_c')")
  public ComplementaryData create(@RequestBody  ComplementaryData complementaryData) throws BaseException {
    ComplementaryData dadosComplementares = ((ComplementaryDataService) this.service).save(complementaryData);
    return ((ComplementaryDataService) this.service).associarContrato(dadosComplementares);
  }

  @Override
  @PreAuthorize("hasAnyAuthority('crud_contrato_u')")
  public ComplementaryData updateNonNullFields(@NonNull @PathVariable("id") Long id,
      @RequestBody ComplementaryData complementaryData) throws BaseException {
    complementaryData.setId(id);
    return ((ComplementaryDataService) this.service).updateNonNullFields(complementaryData);
  }

  @Override
  @PreAuthorize("hasAnyAuthority('crud_contrato_r')")
  public ComplementaryData findOneById(@PathVariable("id") Long id) throws ResourceNotFoundException {
    return super.findOneById(id);
  }
}
